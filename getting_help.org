#+OPTIONS: title:t date:t author:t email:nil
#+OPTIONS: toc:t h:6 num:nil |:t todo:nil
#+OPTIONS: *:t -:t ::t <:t \n:t e:t creator:nil
#+OPTIONS: f:t inline:t tasks:t tex:t timestamp:t
#+OPTIONS: html-preamble:t html-postamble:t

#+PROPERTY: header-args:R :session R:help :eval no :results output :exports code :tangle yes :comments link

#+TITLE:   Getting help with R
#+DATE:	  {{{time(%B %d\, %Y)}}}
#+AUTHOR:  Marie-Hélène Burle
#+EMAIL:   msb2@sfu.ca

/Note: This page is still under construction./
https://support.rstudio.com/hc/en-us/articles/200552336
https://community.rstudio.com/t/faq-whats-a-reproducible-example-reprex-and-how-do-i-do-one/5219

* Where to ask for help

** Ask R

R, as well as any package you have installed, comes with a lot of documentation. This can be invaluable if you do not have internet access.

*** Manuals

General manuals on R can be found by running:

#+BEGIN_SRC R
help.start()
#+END_SRC

*** Packages

To get information on a package called package-name, you can run:

#+BEGIN_SRC R
package?package-name
#+END_SRC

For instance src_R[:eval no]{package?data.table}.

And to get a list of the functions in a package, run:

#+BEGIN_SRC R
help(package = package-name)
#+END_SRC

For instance src_R[:eval no]{help(package = data.table)}.

Note that, for this to work, the package doesn't need to be loaded. But of course, it does need to be installed on your machine.

In the case of packages hosted on CRAN, a pdf containing the information for all the package functions can also be download from the web. Such package manuals are easy to find by googling "CRAN package-name".

*** Functions

Any serious package contains the documentation of every function in help files.

You can get a detailed description of a function called function-name by running:

#+BEGIN_SRC R
?function-name
#+END_SRC

For instance src_R[:eval no]{?map}.

For this to work, the package containing this function needs to be loaded. So the above line will only work if you have previously loaded the package src_R[:eval no]{purrr}. Alternatively, you can run src_R[:eval no]{?purrr::map}.

*** Vignettes

Packages also sometime contain additional information in "vignettes": tutorials on how to use the package.

**** List vignettes

To list all the vignettes for a package called package-name, run:

#+BEGIN_SRC R
vignette(package = "package-name")
#+END_SRC

For instance src_R[:eval no]{vignette(package = "dplyr")}.

Note that, for this to work, the package doesn't need to be loaded. But of course, it does need to be installed on your machine.

To list all the vignettes from the *loaded* packages:

#+BEGIN_SRC R
vignette(all = F)
#+END_SRC
     
To list all the vignettes from all *installed* packages:

#+BEGIN_SRC R
vignette()
#+END_SRC

**** Open a vignette

Once you have found the name of a vignette pertaining to the topic you are interested in, you can open it with:

#+BEGIN_SRC R
vignette("vignette-name")
#+END_SRC

For instance src_R[:eval no]{vignette("two-table")}.

** Ask Google

R has a wonderful community.

- so
- rsc
- twitter
- slack r4ds
- mailing lists

** Cheatsheets

Who doesn't love cheatsheets? Good news: RStudio and others created [[https://www.rstudio.com/resources/cheatsheets/][great cheatsheets]] on the tidyverse and a few other packages. If you use the tidyverse, those are absolute must have.

** At SFU

The SFU Research Commons offers one-on-one [[https://www.lib.sfu.ca/about/branches-depts/rc/services/consultations#r-help-and-consultations][consultations]] to help you with your R code.

* How to ask for help

** The golden rules

The R community is full of people keen to help you: you will be amazed. But if you want to receive good help, you need to do your part. In order for others to understand your issue and be able to help you, the code that you post online needs to follow 4 (even better 5) rules, which are that it:

#+BEGIN_red
1. makes sense without being run,
2. can be run,
3. does not contain sensitive or personal data,
4. does not use data which needs to be downloaded,
5. (optionally) does not contain more than is necessary to reproduce the problem.
#+END_red

Let's go over each point. The posted code...

*** 1. makes sense without being run

This means that it includes the code and its output: not everybody wants to run your code and they may be able to see what is going on just by looking at this.

*** 2. can be run

Anyone copying your code and running it on their machine should get output you got. This is necessary for others to test potential solutions without having to do the work of first making up data that looks like yours.

*** 3. does not contain sensitive or personal data

If your data is sensitive, it needs to be [[id:h:5fa991db-3c7d-4e83-a5bc-de6ac1000ee7][anonymised]] or you need to make up fake data of a similar structure.

*** 4. does not use data which needs to be downloaded

If your code uses, for instance, data from a .csv file, the code alone will not run. Uploading your .csv file for others to download is tedious and many people will not be keen to download it. The [[id:h:b409126d-9278-4647-aff2-1f18fe600857][data should be recreated from the code you post]].

*** 5. (optionally) does not contain more than is necessary to reproduce the problem

While not absolutely necessary, reducing your code to the simplest and smallest sample necessary to reproduce your problem will make it easier for others to pinpoint what is going on. Additionally, it is likely that you will find the problem yourself in the process of producing this "minimal reproducible example".

** How do I follow the golden rules?

Hadley Wickham [[http://adv-r.had.co.nz/Reproducibility.html][How to write a reproducible example]] 
Stack Overflow [[https://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example][How to make a great R reproducible example?]]

https://support.rstudio.com/hc/en-us/articles/200552336

https://www.dummies.com/programming/r/r-for-dummies-cheat-sheet/

https://www.r-bloggers.com/three-tips-for-posting-good-questions-to-r-help-and-stack-overflow/

https://resources.rstudio.com/webinars/help-me-help-you-creating-reproducible-examples-jenny-bryan

https://swcarpentry.github.io/r-novice-gapminder/03-seeking-help/

https://masalmon.eu/2018/07/22/wheretogethelp/

http://www.cookbook-r.com/

** Data anonymisation
:PROPERTIES:
:ID:       h:5fa991db-3c7d-4e83-a5bc-de6ac1000ee7
:END:

** Recreating data
:PROPERTIES:
:ID:       h:b409126d-9278-4647-aff2-1f18fe600857
:END:


 dput() output.
